@import '_util';

/*! 
    https://github.com/splintercode/CoreGrid
    MIT License http://opensource.org/licenses/MIT
    Core Grid 1.5.2
*/

$container-width: 1100px;
$sm-break: 33.75em;
$md-break: 45em;
$lg-break: 60em;
$cols: 12;

*, *:before, *:after {
    /* Chrome 9-, Safari 5-, iOS 4.2-, Android 3-, Blackberry 7- */
    -webkit-box-sizing: border-box;
    /* Firefox (desktop or Android) 28- */
    -moz-box-sizing: border-box;
    /* Firefox 29+, IE 8+, Chrome 10+, Safari 5.1+, Opera 9.5+, iOS 5+, Opera Mini Anything, Blackberry 10+, Android 4+ */
    box-sizing: border-box;
}

/* --- Column Set Up --- */
.extend-col {
    width: 100%;
    padding: 0 8px 16px 8px;
    float: left;
    display: block;
    min-height: 1px;
}

.alpha {
    padding-left: 0;
}

.omega {
    padding-right: 0;
}

.float-left {
    float: left;
}

.float-right {
    float: right;
}

.clear-both {
    clear: both;
}

.clearfix:after {
    content: ".";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
}

.container {
    width: 100%;
    max-width: $container-width;
    margin: 0 auto;
    padding: 0 12px;
}

.row {
    clear:both;
    overflow:hidden;
    margin-left: -8px;
    margin-right:-8px;
}

/* #region --- Contain Box wrappers --- */
$col-width: ($container-width / 12);
@for $i from 1 through $cols {
    .col-#{$i}-#{'contain'} {
        width:100%;
        max-width: ($col-width * $i);
        @extend .extend-col;
    }
}
/* #endregion */

/* #region --- Extra Small Auto Grid --- */
@for $i from 1 through $cols {
    .col-#{$i}-#{'xs'} {
        width: 1 * percentage($i/$cols);
        @extend .extend-col;
    }
}

.visible-xs, .visible {
    display: block;
}

.hidden-xs, .hidden {
    display: none;
}
/* #endregion */

/* #region --- Small Auto Grid 540px and greater --- */
@include respond-min($sm-break) {
    @for $i from 1 through $cols {
        .col-#{$i}-#{'sm'} {
            width: 1 * percentage($i/$cols);
            @extend .extend-col;
        }
    }

    .visible-sm {
        display: block;
    }

    .hidden-sm {
        display: none;
    }
}
/* #endregion */

/* #region --- Primary Medium Auto Grid 720px and greater --- */
@include respond-min($md-break) {
    @for $i from 1 through $cols {
        .col-#{$i}-#{'md'}, .col-#{$i} {
            width: 1 * percentage($i/$cols);
            @extend .extend-col;
        }
    }

    .visible-md {
        display: block;
    }

    .hidden-md {
        display: none;
    }
}
/* #endregion */

/* #region --- Large Auto Grid 960px and greater --- */
@include respond-min($lg-break) {
    @for $i from 1 through $cols {
        .col-#{$i}-#{'lg'} {
            width: 1 * percentage($i/$cols);
            @extend .extend-col;
        }
    }

    .visible-lg {
        display: block;
    }

    .hidden-lg {
        display: none;
    }
}
/* #endregion */

/* #region --- Secondary Semantic Control Grid --- */
/*
.col-1-c { width: 8.333%; } 
.col-2-c { width: 16.666%; } 
.col-3-c { width: 25%; } 
.col-4-c { width: 33.333%; } 
.col-5-c { width: 41.665%; } 
.col-6-c { width: 50%; } 
.col-7-c { width: 58.331%; }
.col-8-c { width: 66.664%; } 
.col-9-c { width: 75%; } 
.col-10-c { width: 83.33%; } 
.col-11-c { width: 91.663%; } 
.col-12-c { width: 100%; } 
*/

@for $i from 1 through $cols {
    .col-#{$i}-#{'c'} {
        @extend .extend-col;
    }
}
/* #endregion */
